--- libevent-0.0.5.orig/libevent.c	2012-04-02 14:24:45.000000000 +0000
+++ libevent-0.0.5/libevent.c	2013-04-26 14:42:45.000000000 +0000
@@ -17,7 +17,7 @@
   +----------------------------------------------------------------------+
 */
 
-/* $Id: libevent.c 318910 2011-11-08 12:34:37Z tony2001 $ */
+/* $Id$ */
 
 #ifdef HAVE_CONFIG_H
 #include "config.h"
@@ -42,7 +42,18 @@
 	(rsrc = (rsrc_type) zend_fetch_resource(passed_id TSRMLS_CC, default_id, resource_type_name, NULL, 1, resource_type))
 #endif
 
-#include <event.h>
+#ifdef PHP_WIN32
+/* XXX compiling with 2.x on Windows. Luckily the ext code works thanks to the
+compat exports from the libevent. However it might need to be adapted to the
+never version, so this ifdefs would go away. */
+# include <event2/event.h>
+# include <event2/event_compat.h>
+# include <event2/event_struct.h>
+# include <event2/bufferevent.h>
+# include <event2/bufferevent_compat.h>
+#else
+# include <event.h>
+#endif
 
 #if PHP_MAJOR_VERSION < 5
 # ifdef PHP_WIN32
@@ -225,6 +236,8 @@
 	if (event->stream_id >= 0) {
 		ZVAL_RESOURCE(args[0], event->stream_id);
 		zend_list_addref(event->stream_id);
+	} else if (events & EV_SIGNAL) {
+		ZVAL_LONG(args[0], fd);
 	} else {
 		ZVAL_NULL(args[0]);
 	}
@@ -365,6 +378,26 @@
 }
 /* }}} */
 
+/* {{{ proto bool event_base_reinit()
+ */
+static PHP_FUNCTION(event_base_reinit) {
+    zval *zbase;
+    php_event_base_t *base;
+    int r = 0;
+    if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "r", &zbase) != SUCCESS) {
+        return;
+    }
+
+    ZVAL_TO_BASE(zbase, base);
+    r = event_reinit(base->base);
+    if (r == -1) {
+        RETURN_FALSE
+    } else {
+        RETURN_TRUE;
+    }
+}
+/* }}} */
+
 /* {{{ proto void event_base_free(resource base) 
  */
 static PHP_FUNCTION(event_base_free)
@@ -488,7 +521,7 @@
 			++base->events;
 		}
 
-		if (old_base) {
+		if (old_base && base != old_base) {
 			--old_base->events;
 			zend_list_delete(old_base->rsrc_id);
 		}
@@ -1387,7 +1420,7 @@
 	php_info_print_table_start();
 	php_info_print_table_header(2, "libevent support", "enabled");
 	php_info_print_table_row(2, "extension version", PHP_LIBEVENT_VERSION);
-	php_info_print_table_row(2, "Revision", "$Revision: 318910 $");
+	php_info_print_table_row(2, "Revision", "$Revision$");
 	
 	snprintf(buf, sizeof(buf) - 1, "%s", event_get_version());
 	php_info_print_table_row(2, "libevent version", buf);
@@ -1559,6 +1592,7 @@
 #endif
 zend_function_entry libevent_functions[] = {
 	PHP_FE(event_base_new, 				arginfo_event_new)
+    PHP_FE(event_base_reinit, 			arginfo_event_base_loopbreak)
 	PHP_FE(event_base_free, 			arginfo_event_base_loopbreak)
 	PHP_FE(event_base_loop, 			arginfo_event_base_loop)
 	PHP_FE(event_base_loopbreak, 		arginfo_event_base_loopbreak)
@@ -1596,6 +1630,7 @@
  */
 zend_function_entry libevent_functions[] = {
 	PHP_FE(event_base_new, 				NULL)
+	PHP_FE(event_base_reinit, 			NULL)
 	PHP_FE(event_base_free, 			NULL)
 	PHP_FE(event_base_loop, 			NULL)
 	PHP_FE(event_base_loopbreak, 		NULL)
